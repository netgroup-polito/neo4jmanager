<?xml version="1.0" standalone="yes"?>
<project name="Neo4jManager" basedir="." default="build-service" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
	<property name="src.dir" location="${basedir}/src"/>
	<property name="web.dir" location="${basedir}/WebContent"/>
	<property name="lib.dir" location="${web.dir}/WEB-INF/lib"/>
	<property name="gen-src.dir" location="${basedir}/gen-src"/>
	<property name="build.dir" location="${basedir}/build"/>
	<property name="schema.dir" location="${basedir}/schema"/>
	
	<property name="nffgSchemaForBinding" value="nffg.xsd"/>
	<property name="responseSchemaForBinding" value="response_types.xsd"/>
	
	<property name="xmlfile.dir" location="${basedir}/xml-json"/>
	
	<property name="api.dir" location="${basedir}/documentation/api"/>
	<property name="packages" value="it.polito.nffg.neo4j.manager, it.polito.nffg.neo4j.exceptions, it.polito.nffg.neo4j.jaxb"/>
  	<property file="server.properties"/>
	<property file="client.properties"/>
	<property name="otherJarsDirectory" location="${web.dir}/WEB-INF/lib"/>
	
	
	<property name="gen-tomcat-service.dir" location="${basedir}/target"/>
	<property name="resources.dir" location="${basedir}/WebContent"/>
	<property name="gen-war.dir" location="${basedir}/war" />
	
	<import file="tomcat-build.xml"/>
	
	<target name="init">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${gen-src.dir}"/>
		<mkdir dir="${api.dir}"/>
		<mkdir dir="${gen-war.dir}"/>
		<mkdir dir="${basedir}/lib"/>
	</target>
	
	<target name="clean" description="Delete all the generated files">
  		<delete dir="${build.dir}"/>
    	<delete dir="${gen-src.dir}"/>
  		<delete dir="${api.dir}"/>
		<delete dir="${gen-war.dir}"/>
		<delete dir="${gen-tomcat-service.dir}"/>
  	</target>
	
	<!-- Here starts part for Maven -->
	<path id="maven-ant-tasks.classpath" path="${basedir}/lib/maven-ant-tasks-2.1.3.jar" />
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml"
	           uri="antlib:org.apache.maven.artifact.ant"
	           classpathref="maven-ant-tasks.classpath" />
	<property file="build.properties"/>
	
	<!-- Load pom.xml for dependencies -->
	<artifact:pom id="pomfile" file="pom.xml"/>
	<artifact:dependencies filesetId="mvn-dependencies" pomRefId="pomfile" />
	
	<!-- The classpath to be used for running the web service -->
	<path id="project.classpath">
	   	<pathelement location="${build.dir}"/>
		<fileset dir="${lib.dir}"/>
		<fileset dir="${otherJarsDirectory}"/>
		<fileset refid="mvn-dependencies" />
	</path>

	<!--Tasks for generating artifacts-->
	<target name="chk-bindings">
		<uptodate property="generate-bindings.notRequired" targetfile="${gen-src.dir}/.flagfile">
			<srcfiles dir="${schema.dir}" includes="${nffgSchemaForBinding}"/>
		</uptodate>
	</target>
	
	<target name="generate-bindings" unless="generate-bindings.notRequired" depends="init,chk-bindings" description="Create the value classes">
		<exec executable="xjc" failonerror="true" output="xjc_log.txt">
			<arg line="-d ${gen-src.dir} -p it.polito.nffg.neo4j.jaxb ${schema.dir}/*.xsd"/>
		</exec>
		<touch file="${gen-src.dir}/.flagfile"/>
	</target>
	
	<target name="build-service" depends="init, generate-bindings" description="Build the sources">
		<javac destdir="${build.dir}" debug="on" includeantruntime="true">
			<src path="${gen-src.dir}"/>
			<src path="${src.dir}"/>
			<include name="it/polito/nffg/neo4j/**/*"/>
			<classpath refid="project.classpath"/>
		</javac>
		<echo message="Operation completed successfully."/>
	</target>
	
	<!--Targets for creating war file-->
	<target name="package-service" depends="build-service">
		<!-- copy web module resource files to temporary destination folder -->
    	<copy toDir="${gen-tomcat-service.dir}" overwrite="true">
        	<fileset dir="${resources.dir}"/>
      	</copy>
		<!-- copy schema files to schema/ directory -->
    	<copy toDir="${gen-tomcat-service.dir}/schema" overwrite="true">
        	<fileset dir="${schema.dir}"/>
      	</copy>
		<!-- copy class files to WEB-INF/classes directory -->
    	<copy toDir="${gen-tomcat-service.dir}/WEB-INF/classes" overwrite="true">
        	<fileset dir="${build.dir}">
        		<exclude name="it/polito/nffg/neo4j/client/"/>
    		</fileset>
      	</copy>
		<!-- copy lib files to WEB-INF/lib directory -->
    	<copy toDir="${gen-tomcat-service.dir}/WEB-INF/lib" overwrite="true">
    		<!--fileset dir="${lib.dir}">
    			<exclude name="maven-ant-tasks-2.1.3.jar"/>
    		</fileset-->
    		<fileset refid="mvn-dependencies" />
    		<mapper type="flatten" />
      	</copy> 
		<!-- make war archive -->
		<jar destfile="${gen-war.dir}/${serviceName}.war" basedir="${gen-tomcat-service.dir}"/>
	</target>

	<!--Targets for generating Javadoc documentation-->
  	<target name="javadoc" depends="generate-bindings" description="Generates javadoc">
  		<delete dir="${api.dir}"/>
    	<javadoc sourcepath="${basedir}" destdir="${api.dir}" useexternalfile="yes" packagenames="${packages}">
    		<fileset dir="${gen-src.dir}" includes="/**/*.java"/>
    		<fileset dir="${src.dir}" includes="/**/*.java" excludes="/**/Neo4jClient.java"/>
    		<classpath refid="project.classpath"/>
    	</javadoc>
  	</target>

	<!--Targets for testing-->
	<target name="build-client" depends="init" description="Build the Client sources">
			<javac destdir="${build.dir}" debug="on" includeantruntime="true">
				<src path="${src.dir}/it/polito/nffg/neo4j/client"/>
				<classpath refid="project.classpath"/>
			</javac>
			<echo message="Operation completed successfully."/>
		</target>

	<target name="create-nffg" depends="build-client" description="Save a Nffg into the Neo4j DB">
    	<echo message="Saving Nffg(s) into the Neo4j DB."/>
    	<java classname="it.polito.nffg.neo4j.client.Neo4jClient" failonerror="true" fork="true">
    		<arg value="-create"/>
    		<arg value="${xmlfile.dir}\${XMLfileForPOST}"/>
    		<arg value="${parameterMediaType}"/>
      		<classpath refid="project.classpath"/>
    	</java>
  		<echo message="Operation completed successfully."/>
  	</target>
	
	<target name="find-paths" depends="build-client" description="Find all paths from a source node to a destination node">
	    <echo message="Searching the paths."/>
	    <java classname="it.polito.nffg.neo4j.client.Neo4jClient" failonerror="true" fork="true">
	    	<arg value="-paths"/>
	    	<arg value="${parameterNffg}"/>
	    	<arg value="${parameterSrcNode}"/>
	    	<arg value="${parameterDstNode}"/>
	    	<arg value="${parameterDirection}"/>
	    	<arg value="${parameterMediaType}"/>
	    	<arg value="${xmlfile.dir}\${XMLfileForPaths}"/>
	     	<classpath refid="project.classpath"/>
	    </java>
	  	<echo message="Operation completed successfully."/>
	</target>
	
	<target name="valuate-reachability" depends="build-client" description="Valuate whether a node is reachable from another node or not">
		<echo message="Valuating the reachability."/>
		<java classname="it.polito.nffg.neo4j.client.Neo4jClient" failonerror="true" fork="true">
		   	<arg value="-reachability"/>
			<arg value="${parameterNffg}"/>
		   	<arg value="${parameterSrcNode}"/>
		   	<arg value="${parameterDstNode}"/>
		   	<arg value="${parameterDirection}"/>
			<arg value="${parameterMediaType}"/>
			<arg value="${xmlfile.dir}\${XMLfileForProperty}"/>
		    <classpath refid="project.classpath"/>
		</java>
		<echo message="Operation completed successfully."/>
	</target>
	
	<target name="retrieve-nffg" depends="build-client" description="Retrieve one or more Nffg from the Neo4j DB">
		<echo message="Retrieving Nffg(s) from the Neo4j DB."/>
		<java classname="it.polito.nffg.neo4j.client.Neo4jClient" failonerror="true" fork="true">
			<arg value="-retrieve"/>
			<arg value="${parameterNffg}"/>
			<arg value="${parameterMediaType}"/>
			<arg value="${xmlfile.dir}\${XMLfileForGET}"/>
			<classpath refid="project.classpath"/>
		</java>
		<echo message="Operation completed successfully."/>
	</target>
	
	<target name="delete-nffg" depends="build-client" description="Delete a Nffg from the Neo4j DB">
		<echo message="Deleting Nffg(s) from the Neo4j DB."/>
		<java classname="it.polito.nffg.neo4j.client.Neo4jClient" failonerror="true" fork="true">
			<arg value="-delete"/>
			<arg value="${parameterNffg}"/>
		    <classpath refid="project.classpath"/>
		</java>
		<echo message="Operation completed successfully."/>
	</target>
</project>